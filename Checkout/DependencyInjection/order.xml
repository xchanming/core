<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="Cicada\Core\Checkout\Order\OrderDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\OrderExceptionHandler">
            <tag name="cicada.dal.exception_handler"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderLineItemDownload\OrderLineItemDownloadDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefundPosition\OrderTransactionCaptureRefundPositionDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\SalesChannel\OrderService">
            <argument type="service" id="Cicada\Core\Framework\Validation\DataValidator"/>
            <argument type="service" id="Cicada\Core\Checkout\Order\Validation\OrderValidationFactory"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="Cicada\Core\Checkout\Cart\SalesChannel\CartService"/>
            <argument type="service" id="payment_method.repository"/>
            <argument type="service" id="Cicada\Core\System\StateMachine\StateMachineRegistry"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Validation\OrderValidationFactory"/>

        <service id="Cicada\Core\Checkout\Cart\Order\OrderPersister">
            <argument type="service" id="order.repository"/>
            <argument type="service" id="Cicada\Core\Checkout\Cart\Order\OrderConverter"/>
            <argument type="service" id="Cicada\Core\Checkout\Cart\CartSerializationCleaner"/>
        </service>

        <service id="Cicada\Core\Checkout\Cart\Order\LineItemDownloadLoader">
            <argument type="service" id="product_download.repository"/>
        </service>

        <service id="Cicada\Core\Checkout\Cart\Order\OrderConverter">
            <argument type="service" id="customer.repository"/>
            <argument type="service" id="Cicada\Core\System\SalesChannel\Context\SalesChannelContextFactory"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="Cicada\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface"/>
            <argument type="service" id="Cicada\Core\Checkout\Order\OrderDefinition"/>
            <argument type="service" id="order_address.repository"/>
            <argument type="service" id="Cicada\Core\System\StateMachine\Loader\InitialStateIdLoader"/>
            <argument type="service" id="Cicada\Core\Checkout\Cart\Order\LineItemDownloadLoader"/>
            <argument type="service" id="rule.repository"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler">
            <argument type="service" id="Cicada\Core\System\StateMachine\StateMachineRegistry"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureStateHandler">
            <argument type="service" id="Cicada\Core\System\StateMachine\StateMachineRegistry"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundStateHandler">
            <argument type="service" id="Cicada\Core\System\StateMachine\StateMachineRegistry"/>
        </service>

        <!-- controller -->
        <service id="Cicada\Core\Checkout\Order\Api\OrderActionController" public="true">
            <argument type="service" id="Cicada\Core\Checkout\Order\SalesChannel\OrderService" />
            <argument type="service" id="Cicada\Core\Checkout\Payment\Cart\PaymentRefundProcessor"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Cicada\Core\Checkout\Order\SalesChannel\OrderRoute" public="true">
            <argument type="service" id="order.repository"/>
            <argument type="service" id="promotion.repository"/>
            <argument type="service" id="cicada.rate_limiter"/>
            <argument type="service" id="event_dispatcher"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\SalesChannel\CancelOrderRoute" public="true">
            <argument type="service" id="Cicada\Core\Checkout\Order\SalesChannel\OrderService"/>
            <argument type="service" id="order.repository"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\SalesChannel\SetPaymentOrderRoute" public="true">
            <argument type="service" id="Cicada\Core\Checkout\Order\SalesChannel\OrderService"/>
            <argument type="service" id="order.repository"/>
            <argument type="service" id="Cicada\Core\Checkout\Payment\SalesChannel\PaymentMethodRoute"/>
            <argument type="service" id="Cicada\Core\Checkout\Cart\Order\OrderConverter"/>
            <argument type="service" id="Cicada\Core\Checkout\Cart\CartRuleLoader"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="Cicada\Core\System\StateMachine\Loader\InitialStateIdLoader"/>
        </service>

        <!-- events -->
        <service id="Cicada\Core\Checkout\Order\Listener\OrderStateChangeEventListener">
            <argument type="service" id="order.repository"/>
            <argument type="service" id="order_transaction.repository"/>
            <argument type="service" id="order_delivery.repository"/>
            <argument type="service" id="event_dispatcher"/>
            <tag name="kernel.event_subscriber"/>
            <argument type="service" id="Cicada\Core\Framework\Event\BusinessEventCollector"/>
            <argument type="service" id="state_machine_state.repository"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\Subscriber\OrderSalutationSubscriber">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Cicada\Core\Checkout\Order\OrderAddressService">
            <argument type="service" id="order.repository"/>
            <argument type="service" id="order_address.repository"/>
            <argument type="service" id="customer_address.repository"/>
            <argument type="service" id="order_delivery.repository"/>
        </service>
    </services>
</container>
